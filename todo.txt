### Contributing:

MasqKit features a handful of extensions that touch many different devices & services, such that one person can seldom test every case.

As a developer, you are welcome to contribute improvments to any extension found here if you feel you will positively impact the majority without adding friction.

Pull requests will be reviewed by trusted maintainers before implementation to avoid the introduction of new issues.

Interested in maintaining an extension? Check out the contribution guide for the rest of the details

### Themeing:

MasqKit is designed for themers, and for them to be happy they need themes to install.

Are you a theme creator? Check out the Default.bundle for an example on the Masq theme structure.

## Lisence: SA by NC 4.0

This library is free to use when the conditions below are followed:
You are free to integrate this into your project provided you meet the provisions laid out in this lisence.

##### You agree that:

- Extensions are free to use and cannot be gated by any form of payment, no exceptions.

- You agree to prefix your extension following the prevalent scheme of `MASQTweakTarget`



#### Documentation:

MASQArtworkView Public Documentation / Usage:

-(id)initWithThemeKey:(NSString *)key frameHost:(UIView *)host imageHost(UIImageView *)imgView;

"key" represents the theme key as a string in which the artwork view registers itself to listen for updates to the user's configured theme.
Recommmended Keys fp

"frameHost" represents the view's frame you would like to follow, with greater needs than a plain CGRect,
generally this would be the UIImageView with your artwork/ the highest super in your stack that matches the artwork view frame.

"imageHost", rather straightforward is the UIImageView which contains the artwork image already, a handy helper to our own purposes.

For some convoluted situations, you may find yourself in-need of private methods to achieve your ideal result.
I am happy to expand on their usage in corressondence at masqsubmissions @ gmail . com ,
but are cautiously without guaruntee to works the same way and therefore not recommended/supported for long-term stability / expectations.

MASQBlurredImageView Public Documentation / Usage:

-(id)initWithThemeKey:(NSString *)key;

"key" similar to above, represents the key associated with the desired style for this view.

Else, it is recommended you utilize one of the two current supported keys from the Core Preferences, and direct users accordingly;
@"CC" /* Control Center type plugins */ @"LS" /*  Lockscreen type plugins */

-(void)updateThemeForStyle:(int)

Thanks for your interest, and submit plugins for official co-maintenence at masqsubmissions @ gmail . com ,
you are always welcome to forge your own path but for the occasional low-maintence tweak I'm happy to collaborate & expand the audience
to your plugin if appropriate for mass-adoption.




Tweet:

Developing a music tweak? Check out extension source code for a demonstration of integrating Masq themeing into your project, guarunteed 100 lines or less

Found bugs?: Submit an issue repest with relevant information about the extensison you were using and on what app version

Overview:

Welcome to the public repository of offical MASQKit extensions. Official simply means they were created by the creator of MASQKit.

This exists to serve as a guide for implementing your own MASQKit extensions into whatever app / tweak you are interested in.

This also servers as a centralized area where app-lovers versed in runtime development can submit bugfixes / improvements to the officail extensions.
